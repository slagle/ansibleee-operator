{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OpenStack Ansible EE operator","text":"<p>An operator to deploy and run an OpenStack Ansible Execution Environment container on Openshift</p>"},{"location":"#build-and-deploy","title":"Build and deploy","text":"<p>It uses operator-sdk to build and run.</p> <p>To build and push to a container registry</p> <pre><code>make docker-build docker-push IMG=\"&lt;your image name&gt;\"\n</code></pre> <p>To deploy in to the cluster</p> <pre><code>make deploy IMG=\"&lt;your image name&gt;\"\n</code></pre> <p>To undeploy it from the cluster</p> <pre><code>make undeploy\n</code></pre>"},{"location":"#use","title":"Use","text":"<p>Once the operator has been deployed succesfully to the openshift/kubernetes cluster, you can see it in action by creating a new \"ansibleee\" CR.</p> <p>There are some examples on the examples directory.</p> <p>The first one is openstack-ansibleee-playbook-local.yaml. This wil execute locally an example playbook, provided inline, which will print an \"hello world\" message using ansible debug module.</p> <pre><code>oc apply -f examples/openstack-ansibleee-playbook-local.yaml\n</code></pre> <p>There are other examples that also execute locally the playbook \"test.yaml\", but that serve as extraMounts demonstration: openstack-ansibleee-extravolumes.yaml and openstack-ansibleee-extravolumes_2_secret.yaml that need the secrets ceph-secret-example.yaml and ceph-secret-example2.yaml created:</p> <pre><code>oc apply -f ceph-secret-example.yaml\noc apply -f ceph-secret-example2.yaml\noc apply -f examples/openstack-ansibleee-extravolumes.yaml\n</code></pre> <p>There are also a number of examples that feature remote execution. By default, all of them expect a compute node to be available in 10.0.0.4, adjust the inventory accordingly for your environment.</p> <p>The first remote example is openstack-ansibleee-playbook.yaml. This runs one of the standalone playbooks that is included in the default image.</p> <p>To access an external node, you need to provide the ssh private key so ansible can connect to the node. This is being expected to be provided by a \"ssh-key-secret\" Secret with this format:</p> <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: ssh-key-secret\n  namespace: openstack\ndata:\n  ssh-privatekey:  3390 bytes                                                                                       \u2502\n  ssh-publickey:   750 bytes\n</code></pre> <p>Once the key has been created, the CR should run the deploy-edpm-os-configure.yml playbook on the external node:</p> <pre><code>oc apply -f examples/openstack-ansibleee-playbook.yaml\n</code></pre> <p>The second remote example is openstack-ansibleee-role.yaml, which will run a certain number of tasks from specific standalone roles:</p> <pre><code>oc apply -f examples/openstack-ansibleee-role.yaml\n</code></pre> <p>And the last remote example is ansibleee-play.yaml, which will run a CR-defined playbook using an inventory stored in a ConfigMap.</p> <pre><code>oc apply -f examples/inventory-configmap.yaml\noc apply -f examples/openstack-ansibleee-play.yaml\n</code></pre>"},{"location":"#example-development-cycle","title":"Example Development Cycle","text":"<p>The following has been verified on openshift-local.</p> <p>Create the CRD managed by the operator. This must be deleted and re-created any time the api changes.</p> <pre><code>oc create -f config/crd/bases/ansibleee.openstack.org_openstackansibleees.yaml\n</code></pre> <p>Build and run a local copy of the OpenStack Ansible Execution Environment operator.</p> <pre><code>make generate\nmake manifests\nmake build\n./bin/manager\n</code></pre> <p>Once the operator is running, create the examle CR to run the test playbook.</p> <pre><code>oc create -f examples/openstack-ansibleee-playbook-local.yaml\n</code></pre> <p>The operator will create an OpenStackAnsibleEE resource which will create a job. That job will spawn a pod using an ansible runner that will execute the given playbook. When the playbook is done, the pod will move to a <code>Completed</code> state.</p> <p>You can get the OpenStackAnsibleEE resource created with the <code>oc get openstackansibleee</code> (or <code>osaee</code>) command.</p> <pre><code>$ oc get osaee\nNAME                       NETWORKATTACHMENTS   STATUS   MESSAGE\nansibleee-playbook-local                        True     AnsibleExecutionJob complete\n</code></pre> <p>After knowing the name of the OpenStackAnsibleEE resource, you can search for its pod by filtering the <code>openstackansibleee_cr</code> label.</p> <pre><code>$ oc get pods -l openstackansibleee_cr=ansibleee-playbook-local\nNAME                             READY   STATUS      RESTARTS   AGE\nansibleee-playbook-local-lbl6c   0/1     Completed   0          44s\n</code></pre> <p>To see the result of the playbook run, use <code>oc logs</code>.</p> <pre><code>oc logs -l openstackansibleee_cr=ansibleee-playbook-local\nNo config file found; using defaults\n\nPLAY [Print hello world] *******************************************************\n\nTASK [Gathering Facts] *********************************************************\nWednesday 12 July 2023  15:43:22 +0000 (0:00:00.022)       0:00:00.022 ********\nok: [localhost]\n\nTASK [Using debug statement] ***************************************************\nWednesday 12 July 2023  15:43:23 +0000 (0:00:01.320)       0:00:01.342 ********\nok: [localhost] =&gt; {\n    \"msg\": \"Hello, world this is openstack-ansibleee-play.yaml\"\n}\n\nPLAY RECAP *********************************************************************\nlocalhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\nWednesday 12 July 2023  15:43:24 +0000 (0:00:00.077)       0:00:01.420 ********\n===============================================================================\nGathering Facts --------------------------------------------------------- 1.32s\nUsing debug statement --------------------------------------------------- 0.08s\n</code></pre>"},{"location":"#using-openstack-ansibleee-operator-with-edpm-ansible","title":"Using openstack-ansibleee-operator with EDPM Ansible","text":"<p>When the openstack-ansibleee-operator spawns a job ansible execution environment crafted image can use playbooks and roles contained in its image.</p> <p>An openstack-ansibleee-runner image is hosted at quay.io/openstack-k8s-operators/openstack-ansibleee-runner which contains edpm-ansible. The following commands may be used to inspect the content.</p> <pre><code>podman pull quay.io/openstack-k8s-operators/openstack-ansibleee-runner:latest\nIMAGE_ID=$(podman images --filter reference=openstack-ansibleee-runner:latest --format \"{{.Id}}\")\npodman run $IMAGE_ID ls -l\n</code></pre> <p>The container is built by a github action from a Dockerfile in the edpm-ansible repository.</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#testing","title":"Testing","text":"<p>The tests can be run with the following command: <pre><code>make test\n</code></pre></p>"},{"location":"contributing/#docs-testing","title":"Docs Testing","text":"<p>Cross-platform: <pre><code>pip install -r docs/doc_requirements.txt\n</code></pre></p> <p>Then: <pre><code>mkdocs serve\n</code></pre> Click the link it outputs. As you save changes to files modified in your editor, the browser will automatically show the new content.</p>"},{"location":"logs/","title":"Persistent logs","text":"<p>For enabling persistent logging, you need to mount <code>/runner/artifacts</code> into a persistent Volume through <code>extraMounts</code> field.</p>"},{"location":"logs/#example","title":"Example:","text":"<pre><code>apiVersion: ansibleee.openstack.org/v1alpha1\nkind: OpenStackAnsibleEE\nmetadata:\n  name: ansibleee-logs\n  namespace: openstack\nspec:\n  playbook: \"test.yaml\"\n  image: quay.io/openstack-k8s-operators/openstack-ansibleee-runner:latest\n  inventory: |\n          all:\n            hosts:\n              localhost\n  extraMounts:\n    - extraVolType: Logs\n      volumes:\n      - name: ansible-logs\n        persistentVolumeClaim:\n          claimName: openstack-ansible-logs\n      mounts:\n      - name: ansible-logs\n        mountPath: \"/runner/artifacts\"\n</code></pre>"},{"location":"openstack_ansibleee/","title":"OpenStackAnsibleEE","text":""},{"location":"openstack_ansibleee/#custom-resources","title":"Custom Resources","text":"<ul> <li>OpenStackAnsibleEE</li> </ul>"},{"location":"openstack_ansibleee/#sub-resources","title":"Sub Resources","text":"<ul> <li>Config</li> <li>OpenStackAnsibleEEList</li> <li>OpenStackAnsibleEESpec</li> <li>OpenStackAnsibleEEStatus</li> </ul>"},{"location":"openstack_ansibleee/#config","title":"Config","text":"<p>Config is a specification of where to mount a certain ConfigMap object</p> Field Description Scheme Required name Name is the name of the ConfigMap that we want to mount string true mountpath MountPoint is the directory of the container where the ConfigMap will be mounted string true <p>Back to Custom Resources</p>"},{"location":"openstack_ansibleee/#openstackansibleee","title":"OpenStackAnsibleEE","text":"<p>OpenStackAnsibleEE is the Schema for the openstackansibleees API</p> Field Description Scheme Required metadata metav1.ObjectMeta false spec OpenStackAnsibleEESpec false status OpenStackAnsibleEEStatus false <p>Back to Custom Resources</p>"},{"location":"openstack_ansibleee/#openstackansibleeelist","title":"OpenStackAnsibleEEList","text":"<p>OpenStackAnsibleEEList contains a list of OpenStackAnsibleEE</p> Field Description Scheme Required metadata metav1.ListMeta false items []OpenStackAnsibleEE true <p>Back to Custom Resources</p>"},{"location":"openstack_ansibleee/#openstackansibleeespec","title":"OpenStackAnsibleEESpec","text":"<p>OpenStackAnsibleEESpec defines the desired state of OpenStackAnsibleEE</p> Field Description Scheme Required play Play is an inline playbook contents that ansible will run on execution. If both Play and Roles are specified, Play takes precedence string false playbook Playbook is the playbook that ansible will run on this execution, accepts path or FQN from collection string false image Image is the container image that will execute the ansible command string false args Args are the command plus the playbook executed by the image. If args is passed, Playbook is ignored. []string false name Name is the name of the internal container inside the pod string false envConfigMapName EnvConfigMapName is the name of the k8s config map that contains the ansible env variables string false env Env is a list containing the environment variables to pass to the pod []corev1.EnvVar false restartPolicy RestartPolicy is the policy applied to the Job on whether it needs to restart the Pod. It can be \\\"OnFailure\\\" or \\\"Never\\\". RestartPolicy default: Never string false preserveJobs PreserveJobs - do not delete jobs after they finished e.g. to check logs PreserveJobs default: true bool false uid UID is the userid that will be used to run the container. int64 false inventory Inventory is the inventory that the ansible playbook will use to launch the job. string false extraMounts ExtraMounts containing conf files and credentials []storage.VolMounts false backoffLimit BackoffLimit allows to define the maximum number of retried executions (defaults to 6). *int32 false networkAttachments NetworkAttachments is a list of NetworkAttachment resource names to expose the services to the given network []string false cmdLine CmdLine is the command line passed to ansible-runner string false initContainers InitContainers allows the passing of an array of containers that will be executed before the ansibleee execution itself []corev1.Container false serviceAccountName ServiceAccountName allows to specify what ServiceAccountName do we want the ansible execution run with. Without specifying, it will run with default serviceaccount string false dnsConfig DNSConfig allows to specify custom dnsservers and search domains *corev1.PodDNSConfig false debug Debug run the pod in debug mode without executing the ansible-runner commands bool true <p>Back to Custom Resources</p>"},{"location":"openstack_ansibleee/#openstackansibleeestatus","title":"OpenStackAnsibleEEStatus","text":"<p>OpenStackAnsibleEEStatus defines the observed state of OpenStackAnsibleEE</p> Field Description Scheme Required hash Map of hashes to track e.g. job status map[string]string false conditions Conditions condition.Conditions false networkAttachments NetworkAttachments status of the deployment pods map[string][]string false JobStatus JobStatus status of the executed job (Pending/Running/Succeeded/Failed) string false <p>Back to Custom Resources</p>"}]}